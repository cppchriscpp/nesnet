;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_col
	.import		_ppu_wait_frame
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_oam_spr
	.import		_pad_trigger
	.import		_set_vram_update
	.import		_vram_adr
	.import		_vram_put
	.import		_vram_fill
	.import		_memcpy
	.import		_http_get
	.export		_doInit
	.export		_showHome
	.export		_doHome
	.export		_showForum
	.export		_doForum
	.export		_showTopic
	.export		_doTopic
	.export		_put_str
	.export		_set_current_url
	.export		_write_screen_buffer
	.export		_clear_screen
	.export		_main
	.export		_hide_pointer

.segment	"DATA"

_currentForumId:
	.byte	$00
_gameState:
	.byte	$00
_currentForumPosition:
	.byte	$00
_currentTopicPosition:
	.byte	$00
_totalForumCount:
	.byte	$00
_totalTopicCount:
	.byte	$00
_hasHitColon:
	.byte	$00

.segment	"RODATA"

L0001:
	.byte	$63,$70,$70,$72,$6F,$67,$72,$61,$6D,$73,$2E,$6E,$65,$74,$2F,$64
	.byte	$65,$76,$6E,$75,$6C,$6C,$2F,$6E,$65,$73,$64,$65,$76,$2F,$00,$4E
	.byte	$45,$53,$44,$65,$76,$20,$46,$6F,$72,$75,$6D,$20,$42,$72,$6F,$77
	.byte	$73,$65,$72,$21,$00,$42,$79,$20,$63,$70,$70,$63,$68,$72,$69,$73
	.byte	$63,$70,$70,$00,$49,$6E,$73,$70,$69,$72,$65,$64,$20,$62,$79,$20
	.byte	$43,$6F,$6E,$6E,$65,$63,$74,$65,$64,$4E,$45,$53,$00,$50,$72,$65
	.byte	$73,$73,$20,$73,$74,$61,$72,$74,$20,$74,$6F,$20,$62,$72,$6F,$77
	.byte	$73,$65,$20,$74,$68,$65,$00,$6D,$6F,$73,$74,$20,$72,$65,$63,$65
	.byte	$6E,$74,$20,$66,$6F,$72,$75,$6D,$20,$70,$6F,$73,$74,$73,$2E,$00
	.byte	$4C,$6F,$61,$64,$69,$6E,$67,$2E,$2E,$2E,$00,$63,$70,$70,$72,$6F
	.byte	$67,$72,$61,$6D,$73,$2E,$6E,$65,$74,$2F,$64,$65,$76,$6E,$75,$6C
	.byte	$6C,$2F,$6E,$65,$73,$64,$65,$76,$2F,$00,$4C,$6F,$61,$64,$69,$6E
	.byte	$67,$2E,$2E,$2E,$00

.segment	"BSS"

_theMessage:
	.res	512,$00
_currentUrl:
	.res	100,$00
_screenBuffer:
	.res	20,$00
_currentPadState:
	.res	1,$00
_callCount:
	.res	1,$00
_i:
	.res	1,$00
_tempMessage:
	.res	2,$00
_currentChar:
	.res	2,$00
_offset:
	.res	2,$00
_forumIds:
	.res	100,$00
_forumIdA:
	.res	1,$00
_forumIdB:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ doInit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doInit: near

.segment	"CODE"

;
; ppu_wait_frame();
;
	jsr     _ppu_wait_frame
;
; currentPadState = pad_trigger(0);
;
	lda     #$00
	jsr     _pad_trigger
	sta     _currentPadState
;
; if (currentPadState & PAD_START) {
;
	and     #$08
;
; showHome();
;
	jne     _showHome
;
; set_vram_update(NULL);
;
	tax
	jmp     _set_vram_update

.endproc

; ---------------------------------------------------------------
; void __near__ showHome (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_showHome: near

.segment	"CODE"

;
; hide_pointer();
;
	jsr     _hide_pointer
;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_screen();
;
	jsr     _clear_screen
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; write_screen_buffer(2, 12, "Loading...");
;
	jsr     decsp4
	lda     #$02
	ldy     #$03
	sta     (sp),y
	lda     #$0C
	dey
	sta     (sp),y
	lda     #<(L0001+144)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+144)
	sta     (sp),y
	jsr     _write_screen_buffer
;
; ppu_wait_frame(); // Flush output to make sure we see this on screen first.
;
	jsr     _ppu_wait_frame
;
; set_vram_update(NULL);
;
	ldx     #$00
	txa
	jsr     _set_vram_update
;
; http_get("cpprograms.net/devnull/nesdev/", theMessage);
;
	lda     #<(L0001+155)
	ldx     #>(L0001+155)
	jsr     pushax
	lda     #<(_theMessage)
	ldx     #>(_theMessage)
	jsr     _http_get
;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_screen();
;
	jsr     _clear_screen
;
; offset = 0x2081;
;
	ldx     #$20
	lda     #$81
	sta     _offset
	stx     _offset+1
;
; vram_adr(offset);
;
	jsr     _vram_adr
;
; currentChar = &theMessage[0];
;
	lda     #<(_theMessage)
	sta     _currentChar
	lda     #>(_theMessage)
	sta     _currentChar+1
;
; forumIdA = 0;
;
	lda     #$00
	sta     _forumIdA
;
; forumIdB = 0;
;
	sta     _forumIdB
;
; currentForumId = 0;
;
	sta     _currentForumId
;
; while (*currentChar != '\0') {
;
L00CD:	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jeq     L00CE
;
; if (forumIdA == 0) {
;
	lda     _forumIdA
	bne     L00D0
;
; forumIdA = *currentChar;
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     _forumIdA
;
; } else if (forumIdB == 0) {
;
	jmp     L00E9
L00D0:	lda     _forumIdB
	jne     L00D5
;
; forumIdB = *currentChar;
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     _forumIdB
;
; if (*currentChar == ':') {
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	cmp     #$3A
	bne     L00D9
;
; forumIds[currentForumId<<1 + 1] = ' ';
;
	ldx     #$00
	lda     _currentForumId
	jsr     aslax2
	clc
	adc     #<(_forumIds)
	sta     ptr1
	txa
	adc     #>(_forumIds)
	sta     ptr1+1
	lda     #$20
	sta     (ptr1),y
;
; } else {
;
	jmp     L00DE
;
; forumIds[currentForumId<<1 + 1] = *currentChar;
;
L00D9:	ldx     #$00
	lda     _currentForumId
	jsr     aslax2
	clc
	adc     #<(_forumIds)
	tay
	txa
	adc     #>(_forumIds)
	tax
	tya
	jsr     pushax
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     staspidx
;
; currentChar++; // Force-skip the colon after this char.
;
	lda     _currentChar
	ldx     _currentChar+1
	clc
	adc     #$01
	bcc     L00E3
	inx
L00E3:	sta     _currentChar
	stx     _currentChar+1
;
; forumIds[currentForumId<<1] = forumIdA;
;
L00DE:	ldx     #$00
	lda     _currentForumId
	asl     a
	bcc     L019C
	inx
	clc
L019C:	adc     #<(_forumIds)
	sta     ptr1
	txa
	adc     #>(_forumIds)
	sta     ptr1+1
	lda     _forumIdA
	ldy     #$00
	sta     (ptr1),y
;
; totalForumCount++;
;
	lda     _totalForumCount
	clc
	adc     #$01
	sta     _totalForumCount
;
; currentForumId++;
;
	lda     _currentForumId
	clc
	adc     #$01
	sta     _currentForumId
;
; } else {
;
	jmp     L00E9
;
; vram_put(*currentChar-0x20);
;
L00D5:	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$20
	jsr     _vram_put
;
; currentChar++;
;
L00E9:	lda     _currentChar
	ldx     _currentChar+1
	clc
	adc     #$01
	bcc     L00EE
	inx
L00EE:	sta     _currentChar
	stx     _currentChar+1
;
; if (*currentChar == '|') {
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$7C
	jne     L00CD
;
; offset += 0x20;
;
	lda     #$20
	clc
	adc     _offset
	sta     _offset
	bcc     L00F3
	inc     _offset+1
;
; vram_adr(offset);
;
L00F3:	lda     _offset
	ldx     _offset+1
	jsr     _vram_adr
;
; currentChar++;
;
	lda     _currentChar
	ldx     _currentChar+1
	clc
	adc     #$01
	bcc     L00F7
	inx
L00F7:	sta     _currentChar
	stx     _currentChar+1
;
; forumIdA = forumIdB = 0;
;
	lda     #$00
	sta     _forumIdB
	sta     _forumIdA
;
; }
;
	jmp     L00CD
;
; ppu_on_all();
;
L00CE:	jsr     _ppu_on_all
;
; gameState = GAME_STATE_HOME;
;
	lda     #$01
	sta     _gameState
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ doHome (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doHome: near

.segment	"CODE"

;
; ppu_wait_frame();
;
	jsr     _ppu_wait_frame
;
; currentPadState = pad_trigger(0);
;
	lda     #$00
	jsr     _pad_trigger
	sta     _currentPadState
;
; if (currentPadState & PAD_SELECT) {
;
	and     #$04
	beq     L0103
;
; showHome();
;
	jsr     _showHome
;
; } else {
;
	jmp     L0106
;
; set_vram_update(NULL);
;
L0103:	tax
	jsr     _set_vram_update
;
; if (currentPadState & PAD_UP && currentForumPosition > 0) {
;
L0106:	lda     _currentPadState
	and     #$10
	beq     L0109
	lda     _currentForumPosition
	beq     L0109
;
; currentForumPosition--;
;
	lda     _currentForumPosition
	pha
	sec
	sbc     #$01
;
; } else if (currentPadState & PAD_DOWN && currentForumPosition < totalForumCount-1) {
;
	jmp     L019E
L0109:	lda     _currentPadState
	and     #$20
	beq     L010F
	lda     _currentForumPosition
	jsr     pusha0
	lda     _totalForumCount
	sec
	sbc     #$01
	bcs     L0112
	ldx     #$FF
L0112:	jsr     tosicmp
	bcs     L010F
;
; currentForumPosition++;
;
	lda     _currentForumPosition
	pha
	clc
	adc     #$01
L019E:	sta     _currentForumPosition
	pla
;
; if (currentPadState & PAD_A) {
;
L010F:	lda     _currentPadState
	and     #$01
	beq     L0115
;
; showForum();
;
	ldy     #$00
	jsr     _showForum
;
; oam_spr(0, 32 + (currentForumPosition<<3), ARROW_CHR_ID, 0, 0);
;
L0115:	jsr     decsp4
	lda     #$00
	ldy     #$03
	sta     (sp),y
	tax
	lda     _currentForumPosition
	jsr     aslax3
	clc
	adc     #$20
	dey
	sta     (sp),y
	lda     #$FF
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	jmp     _oam_spr

.endproc

; ---------------------------------------------------------------
; void __near__ showForum (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_showForum: near

.segment	"CODE"

;
; hide_pointer();
;
	jsr     _hide_pointer
;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_screen();
;
	jsr     _clear_screen
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; write_screen_buffer(2, 12, "Loading...");
;
	jsr     decsp4
	lda     #$02
	ldy     #$03
	sta     (sp),y
	lda     #$0C
	dey
	sta     (sp),y
	lda     #<(L0001+186)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+186)
	sta     (sp),y
	jsr     _write_screen_buffer
;
; ppu_wait_frame(); // Flush output to make sure we see this on screen first.
;
	jsr     _ppu_wait_frame
;
; set_vram_update(NULL);
;
	ldx     #$00
	txa
	jsr     _set_vram_update
;
; set_current_url();
;
	jsr     _set_current_url
;
; currentUrl[FIRST_CUSTOM_URL_CHAR-1] = '/'; // TODO: Fix issues with \0 eating characters and making this into a not-url.
;
	lda     #$2F
	sta     _currentUrl+30
;
; currentUrl[FIRST_CUSTOM_URL_CHAR]  = '?';
;
	lda     #$3F
	sta     _currentUrl+31
;
; currentUrl[FIRST_CUSTOM_URL_CHAR+1] = 'f';
;
	lda     #$66
	sta     _currentUrl+32
;
; currentUrl[FIRST_CUSTOM_URL_CHAR+2] = '=';
;
	lda     #$3D
	sta     _currentUrl+33
;
; currentUrl[FIRST_CUSTOM_URL_CHAR+3] = forumIds[currentForumPosition<<1];
;
	ldx     #$00
	lda     _currentForumPosition
	asl     a
	bcc     L019F
	inx
L019F:	sta     ptr1
	txa
	clc
	adc     #>(_forumIds)
	sta     ptr1+1
	ldy     #<(_forumIds)
	lda     (ptr1),y
	sta     _currentUrl+34
;
; currentUrl[FIRST_CUSTOM_URL_CHAR+4] = forumIds[currentForumPosition<<1 + 1];
;
	ldx     #$00
	lda     _currentForumPosition
	jsr     aslax2
	sta     ptr1
	txa
	clc
	adc     #>(_forumIds)
	sta     ptr1+1
	ldy     #<(_forumIds)
	lda     (ptr1),y
	sta     _currentUrl+35
;
; currentUrl[FIRST_CUSTOM_URL_CHAR+5] = '\0';
;
	lda     #$00
	sta     _currentUrl+36
;
; http_get(currentUrl, theMessage);
;
	lda     #<(_currentUrl)
	ldx     #>(_currentUrl)
	jsr     pushax
	lda     #<(_theMessage)
	ldx     #>(_theMessage)
	jsr     _http_get
;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_screen();
;
	jsr     _clear_screen
;
; offset = 0x2081;
;
	ldx     #$20
	lda     #$81
	sta     _offset
	stx     _offset+1
;
; vram_adr(offset);
;
	jsr     _vram_adr
;
; currentChar = &theMessage[0];
;
	lda     #<(_theMessage)
	sta     _currentChar
	lda     #>(_theMessage)
	sta     _currentChar+1
;
; forumIdA = 0;
;
	lda     #$00
	sta     _forumIdA
;
; forumIdB = 0;
;
	sta     _forumIdB
;
; currentForumId = 0;
;
	sta     _currentForumId
;
; while (*currentChar != '\0') {
;
L0156:	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jeq     L0157
;
; if (*currentChar == ':') {
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	cmp     #$3A
	bne     L0159
;
; hasHitColon = TRUE;
;
	lda     #$01
	sta     _hasHitColon
;
; } else if (hasHitColon) {
;
	jmp     L015E
L0159:	lda     _hasHitColon
	beq     L015E
;
; vram_put(*currentChar-0x20);
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$20
	jsr     _vram_put
;
; currentChar++;
;
L015E:	lda     _currentChar
	ldx     _currentChar+1
	clc
	adc     #$01
	bcc     L0164
	inx
L0164:	sta     _currentChar
	stx     _currentChar+1
;
; if (*currentChar == '|') {
;
	lda     _currentChar
	sta     ptr1
	lda     _currentChar+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$7C
	bne     L0156
;
; hasHitColon = FALSE;
;
	sty     _hasHitColon
;
; offset += 0x20;
;
	lda     #$20
	clc
	adc     _offset
	sta     _offset
	bcc     L016B
	inc     _offset+1
;
; vram_adr(offset);
;
L016B:	lda     _offset
	ldx     _offset+1
	jsr     _vram_adr
;
; currentChar++;
;
	lda     _currentChar
	ldx     _currentChar+1
	clc
	adc     #$01
	bcc     L016F
	inx
L016F:	sta     _currentChar
	stx     _currentChar+1
;
; totalTopicCount++;
;
	lda     _totalTopicCount
	clc
	adc     #$01
	sta     _totalTopicCount
;
; }
;
	jmp     L0156
;
; ppu_on_all();
;
L0157:	jsr     _ppu_on_all
;
; gameState = GAME_STATE_FORUM;
;
	lda     #$02
	sta     _gameState
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ doForum (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doForum: near

.segment	"CODE"

;
; ppu_wait_frame();
;
	jsr     _ppu_wait_frame
;
; currentPadState = pad_trigger(0);
;
	lda     #$00
	jsr     _pad_trigger
	sta     _currentPadState
;
; if (currentPadState & PAD_SELECT) {
;
	and     #$04
	beq     L0179
;
; showForum();
;
	jsr     _showForum
;
; } else {
;
	jmp     L017C
;
; set_vram_update(NULL);
;
L0179:	tax
	jsr     _set_vram_update
;
; if (currentPadState & PAD_UP && currentTopicPosition > 0) {
;
L017C:	lda     _currentPadState
	and     #$10
	beq     L017F
	lda     _currentTopicPosition
	beq     L017F
;
; currentTopicPosition--;
;
	lda     _currentTopicPosition
	pha
	sec
	sbc     #$01
;
; } else if (currentPadState & PAD_DOWN && currentTopicPosition < totalTopicCount-1) {
;
	jmp     L01A1
L017F:	lda     _currentPadState
	and     #$20
	beq     L0185
	lda     _currentTopicPosition
	jsr     pusha0
	lda     _totalTopicCount
	sec
	sbc     #$01
	bcs     L0188
	ldx     #$FF
L0188:	jsr     tosicmp
	bcs     L0185
;
; currentTopicPosition++;
;
	lda     _currentTopicPosition
	pha
	clc
	adc     #$01
L01A1:	sta     _currentTopicPosition
	pla
;
; if (currentPadState & PAD_A) {
;
L0185:	lda     _currentPadState
	and     #$01
	beq     L018B
;
; showTopic();
;
	ldy     #$00
	jsr     _showTopic
;
; if (currentPadState & PAD_B) {
;
L018B:	lda     _currentPadState
	and     #$02
	beq     L018E
;
; showHome();
;
	jsr     _showHome
;
; oam_spr(0, 32 + (currentTopicPosition<<3), ARROW_CHR_ID, 0, 0);
;
L018E:	jsr     decsp4
	lda     #$00
	ldy     #$03
	sta     (sp),y
	tax
	lda     _currentTopicPosition
	jsr     aslax3
	clc
	adc     #$20
	dey
	sta     (sp),y
	lda     #$FF
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	jmp     _oam_spr

.endproc

; ---------------------------------------------------------------
; void __near__ showTopic (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_showTopic: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ doTopic (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doTopic: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ put_str (unsigned int, __near__ const unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_put_str: near

.segment	"CODE"

;
; vram_adr(adr);
;
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _vram_adr
;
; if(!*str) break;
;
L0010:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jeq     incsp4
;
; vram_put((*str++)-0x20);//-0x20 because ASCII code 0x20 is placed in tile 0 of the CHR
;
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L0018
	inx
L0018:	jsr     stax0sp
	ldy     #$00
	lda     (regsave),y
	sec
	sbc     #$20
	jsr     _vram_put
;
; }
;
	jmp     L0010

.endproc

; ---------------------------------------------------------------
; void __near__ set_current_url (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_current_url: near

.segment	"CODE"

;
; memcpy(currentUrl, "cpprograms.net/devnull/nesdev/", FIRST_CUSTOM_URL_CHAR-1);
;
	ldy     #$1D
L001F:	lda     L0001,y
	sta     _currentUrl,y
	dey
	bpl     L001F
;
; currentUrl[FIRST_CUSTOM_URL_CHAR] = '\0';
;
	lda     #$00
	sta     _currentUrl+31
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ write_screen_buffer (unsigned char, unsigned char, __near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_write_screen_buffer: near

.segment	"CODE"

;
; screenBuffer[0] = MSB(NTADR_A(x, y)) | NT_UPD_HORZ;
;
	ldx     #$00
	ldy     #$02
	lda     (sp),y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	iny
	lda     (sp),y
	ora     ptr1
	lda     tmp1
	ora     #$20
	ora     #$40
	sta     _screenBuffer
;
; screenBuffer[1] = LSB(NTADR_A(x, y));
;
	ldx     #$00
	dey
	lda     (sp),y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	iny
	lda     (sp),y
	ora     ptr1
	sta     _screenBuffer+1
	lda     tmp1
	ora     #$20
;
; screenBuffer[2] = 16u;
;
	lda     #$10
	sta     _screenBuffer+2
;
; for (i = 0; data[i] != '\0'; i++) 
;
	lda     #$00
L01A5:	sta     _i
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     _i
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	beq     L003E
;
; screenBuffer[i+3u] = data[i]-0x20;
;
	ldx     #$00
	lda     _i
	clc
	adc     #$03
	bcc     L01A4
	inx
	clc
L01A4:	adc     #<(_screenBuffer)
	sta     sreg
	txa
	adc     #>(_screenBuffer)
	sta     sreg+1
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     _i
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$20
	ldy     #$00
	sta     (sreg),y
;
; for (i = 0; data[i] != '\0'; i++) 
;
	lda     _i
	clc
	adc     #$01
	jmp     L01A5
;
; screenBuffer[19] = NT_UPD_EOF;
;
L003E:	lda     #$FF
	sta     _screenBuffer+19
;
; set_vram_update(screenBuffer);
;
	lda     #<(_screenBuffer)
	ldx     #>(_screenBuffer)
	jsr     _set_vram_update
;
; }
;
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ clear_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_screen: near

.segment	"CODE"

;
; vram_adr(0x2060);
;
	ldx     #$20
	lda     #$60
	jsr     _vram_adr
;
; vram_fill(0, 0x03a0);
;
	lda     #$00
	jsr     pusha
	ldx     #$03
	lda     #$A0
	jmp     _vram_fill

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; pal_col(1,0x19);//set dark green color (TODO: There's a more sane way to do setup)
;
	lda     #$01
	jsr     pusha
	lda     #$19
	jsr     _pal_col
;
; pal_col(17, 0x19);
;
	lda     #$11
	jsr     pusha
	lda     #$19
	jsr     _pal_col
;
; put_str(NTADR_A(4,2),"NESDev Forum Browser!");
;
	jsr     decsp4
	lda     #$44
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001+31)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+31)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(7,4), "By cppchriscpp");
;
	jsr     decsp4
	lda     #$87
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001+53)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+53)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(3,27), "Inspired by ConnectedNES");
;
	jsr     decsp4
	lda     #$63
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$23
	sta     (sp),y
	lda     #<(L0001+68)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+68)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,9),"Press start to browse the");
;
	jsr     decsp4
	lda     #$22
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$21
	sta     (sp),y
	lda     #<(L0001+93)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+93)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,10),"most recent forum posts.");
;
	jsr     decsp4
	lda     #$42
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$21
	sta     (sp),y
	lda     #<(L0001+119)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+119)
	sta     (sp),y
	jsr     _put_str
;
; ppu_on_all();//enable rendering
;
	jsr     _ppu_on_all
;
; callCount = i = 0;
;
	lda     #$00
	sta     _i
	sta     _callCount
;
; ppu_wait_frame();
;
	jsr     _ppu_wait_frame
;
; switch (gameState) {
;
L008B:	lda     _gameState
;
; } 
;
	beq     L0092
	cmp     #$01
	beq     L0095
	cmp     #$02
	beq     L0098
	cmp     #$03
	beq     L009B
	jmp     L008B
;
; doInit();
;
L0092:	tay
	jsr     _doInit
;
; break;
;
	jmp     L008B
;
; doHome();
;
L0095:	ldy     #$00
	jsr     _doHome
;
; break;
;
	jmp     L008B
;
; doForum();
;
L0098:	ldy     #$00
	jsr     _doForum
;
; break;
;
	jmp     L008B
;
; doTopic();
;
L009B:	ldy     #$00
	jsr     _doTopic
;
; break;
;
	jmp     L008B

.endproc

; ---------------------------------------------------------------
; void __near__ hide_pointer (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hide_pointer: near

.segment	"CODE"

;
; oam_spr(0, 0xff, 0, 0, 0);
;
	jsr     decsp4
	lda     #$00
	ldy     #$03
	sta     (sp),y
	lda     #$FF
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	jmp     _oam_spr

.endproc

